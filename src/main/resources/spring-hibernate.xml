<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-4.0.xsd
    ">
    <!--一般配置
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${driverClassName}"></property>
        <property name="url" value="${url}"></property>
        <property name="username" value="${username}"></property>
        <property name="password" value="${password}"></property>
    </bean>
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${driverClassName}"/>
        <property name="url" value="${url}"/>
        <property name="username" value="${username}"/>
        <property name="password" value="${password}"/>
        <property name="maxActive" value="100"/>
        <property name="maxWait" value="1000"/>
        <property name="poolPreparedStatements" value="true"/>
        <property name="defaultAutoCommit" value="true"/>
        <property name="minEvictableIdleTimeMillis" value="10"/>
    </bean>
-->
    <!-- C3P0 配置 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass">
            <value>com.mysql.jdbc.Driver</value>
        </property>
        <property name="jdbcUrl">
            <value>jdbc:mysql://127.0.0.1:3306/myweb</value>
        </property>
        <property name="properties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="c3p0.minPoolSize">1</prop>
                <prop key="hc3p0.maxPoolSize">10</prop>
                <prop key="hc3p0.timeout">60</prop>
                <prop key="c3p0.max_statement">0</prop>
                <prop key="c3p0.testConnectionOnCheckout">true</prop>
                <prop key="testConnectionOnCheckin">true</prop>
                <prop key="c3p0.testConnectionOnCheckout">true</prop>
                <prop key="c3p0.testConnectionOnCheckin">true</prop>
                <prop key="preferredTestQuery">SELECT 1</prop>
                <prop key="hibernate.c3p0.idle_test_period">30</prop>
                <prop key="user">root</prop>
                <prop key="password">root</prop>
            </props>
        </property>
    </bean>

    <!-- proxool 配置
    <bean id="dataSource" class="org.logicalcobwebs.proxool.ProxoolDataSource">
    <property name="driver">
        <value>${driverClassName}</value>
    </property>
    <property name="driverUrl">
        <value>${url}</value>
    </property>
    <property name="user" value="${username}" />
    <property name="password" value="${password}" />
    <property name="maximumConnectionCount" value="3"></property>
    <property name="minimumConnectionCount" value="2"></property>
    <property name="prototypeCount" value="2"></property>
    <property name="testBeforeUse" value="true"></property>
    <property name="houseKeepingTestSql" value="select getdate()"></property>
    <property name="houseKeepingSleepTime" value="600000"></property>
    <property name="maximumActiveTime" value="900000"></property>
    <property name="maximumConnectionLifetime" value="14400000" />
    </bean>
-->


            <!-- session工厂 -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="hibernateProperties">
            <props>
                <!--<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>-->
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="hibernate.current_session_context_class">
                    org.springframework.orm.hibernate4.SpringSessionContext
                </prop>
                <!--报错org.hibernate.engine.jdbc.internal.JdbcServicesImpl
                在配置的时候没取到值。因为Hibernate默认是使用jdbc方式来取的，如果使用连接池的方式的话，必须告诉Hibernate一声，让它不使用单纯的JDBC连接。-->
                <prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
                <!--<prop key="hibernate.cache.use_query_cache">true</prop>-->
                <!--<prop key="hibernate.cache.use_second_level_cache">true</prop>-->
                <!--<prop key="hibernate.cache.provider_class">org.hibernate.cache.CacheException</prop>-->
                <!--<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.EhCacheProvider</prop>-->
            </props>
        </property>
        <!-- 注解方式配置 -->
        <property name="packagesToScan">
            <list>
                <value>entity</value>
            </list>
        </property>
    </bean>

    <!-- 配置事务 -->
    <bean name="txManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <tx:annotation-driven transaction-manager="txManager" />

    <!--<bean id='filter_flux' class="filter.Filter_flux">
    </bean>
    <bean id="myfilterChainProxy" class="org.springframework.security.web.FilterChainProxy">
        <security:filter-chain-map request-matcher="ant">
            <security:filter-chain pattern="/*" filters="filter_flux" />
        </security:filter-chain-map>
    </bean>-->
</beans>